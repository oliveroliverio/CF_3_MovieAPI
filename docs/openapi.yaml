openapi: 3.0.0
info:
  version: 1.0.0
  title: MyFlix API
  description: An API for a movie database and user management

servers:
  - url: http://localhost:8080

paths:
  /movies:
    get:
      summary: Get all movies
      responses:
        200:
          description: List of all movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

  /movies/{title}:
    get:
      summary: Get a movie by title
      parameters:
        - in: path
          name: title
          schema:
            type: string
          required: true
          description: Title of the movie
      responses:
        200:
          description: Movie information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        400:
          description: Movie not found

  /movies/genres:
    get:
      summary: Get all movie genres
      responses:
        200:
          description: List of all genres
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /movies/genres/{genreName}:
    get:
      summary: Get movies by genre
      parameters:
        - in: path
          name: genreName
          schema:
            type: string
          required: true
          description: Genre name
      responses:
        200:
          description: List of movies for the specified genre
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        400:
          description: Genre not found

  /users:
    get:
      summary: Get all users
      responses:
        200:
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created successfully
        400:
          description: User already exists

  /users/{username}:
    get:
      summary: Get user by username
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
      responses:
        200:
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found

    put:
      summary: Update user information
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found

    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found

  /users/{username}/movies:
    post:
      summary: Add favorite movie to a user
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        201:
          description: Movie added to favorites
        404:
          description: User or movie not found

    get:
      summary: Get favorite movies of a user
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
      responses:
        200:
          description: List of favorite movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

  /users/{username}/favoriteMovies/{movieTitle}:
    delete:
      summary: Remove a favorite movie from a user
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of the user
        - in: path
          name: movieTitle
          schema:
            type: string
          required: true
          description: Title of the movie
      responses:
        200:
          description: Movie removed from favorites
        404:
          description: User or movie not found

components:
  schemas:
    Movie:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        genre:
          type: object
          properties:
            name:
              type: string
        director:
          type: string
        actors:
          type: array
          items:
            type: string
        ImagePath:
          type: string
        Featured:
          type: boolean

    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        birthday:
          type: string
          format: date
        favoriteMovies:
          type: array
          items:
            type: string
